'use client'

import { useState } from 'react'
import { client } from "../../lib/client";
import { liskchain } from "../../lib/chain";
import { ClaimButton } from "thirdweb/react";

//import { ThirdwebProvider, Web3Button, useContract } from '@thirdweb-dev/react';
import { Radio, RadioGroup } from '@headlessui/react'
import { CheckIcon } from '@heroicons/react/20/solid'
import ApplicationShell from '@/components/ApplicationShell'

const frequencies = [
  { value: 'monthly', label: 'Price', priceSuffix: '' },
  { value: 'annually', label: 'Amount', priceSuffix: '' },
]
const tiers = [
  {
    name: 'Pok√© Ball',
    id: 'tier-hobby',
    href: '#',
    price: { monthly: 'Free', annually: '10 000' },
    description: 'Only one per person, a gift from us to everyone.',
    features: ['100 Colourlesscoins', 'Discord Access', 'Limited to 10000 NFTs'],
    mostPopular: false,
  },
  {
    name: 'Great Ball',
    id: 'tier-freelancer',
    href: '#',
    price: { monthly: 'Whitelist', annually: '1 000' },
    description: 'A gift for the early community and advisors',
    features: ['500 Colourlesscoins', '100 Firecoins', '100 Watercoins', 'Discord Access', 'Limited to 1000 NFTs'],
    mostPopular: false,
  },
  {
    name: 'Ultra Ball',
    id: 'tier-startup',
    href: '#',
    price: { monthly: '0.035eth', annually: '500' },
    description: 'The ultimate starter kit for virtual collectors.',
    features: [
      '750 Colourlesscoins',
      '750 Metalcoins',
      '750 Lightningcoins',
      '100 Specialcoins',
      'Discord Access',
      'Limited to 500 NFTs',
    ],
    mostPopular: true,
  },
  {
    name: 'Master Ball',
    id: 'tier-enterprise',
    href: '#',
    price: { monthly: '3.5eth', annually: '5' },
    description: 'Reserved for the Elites and the Champion',
    features: [
        '999 Colourlesscoins',
        '999 Firecoins',
        '999 Watercoins',
        '999 Grasscoins',
        '999 Psychiccoins',
        '999 Fightingcoins',
        '999 Metalcoins',
        '999 Lightningcoins',
        '999 Candycoins',
        '999 Fairycoins',
        '999 Darkcoins',
        '999 Specialcoins',
        '999 Dragoncoins',
        '100 Pokecoins',
        'Discord Access',
        'Limited to 5 NFTs',
    ],
    mostPopular: false,
  },
]

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}



export default function Example() {
  const [frequency, setFrequency] = useState(frequencies[0])

  return (

    
    <ApplicationShell>
    <div className="bg-white py-24 sm:py-32">
      <div className="mx-auto max-w-7xl px-6 lg:px-8">
        <div className="mx-auto max-w-4xl text-center">
          <h2 className="text-base/7 font-semibold">Phase 1</h2>
          <p className="mt-2 text-5xl font-semibold tracking-tight text-balance text-gray-900 sm:text-6xl">
            Claim an NFT and receive tokens on Airdrop Day
          </p>


        </div>
        <p className="mx-auto mt-6 max-w-2xl text-center text-lg font-medium text-pretty text-gray-600 sm:text-xl/8">
          Tokens will be used to mint Energy NFTs, buy Lucky Packs that cointain Pokemon NFTs and will be repurchased with trading fees generated by the NFT marketplace in the future.
        </p>

        <ClaimButton
  contractAddress="0x88b166d30905F441CC61d8053DBbe254189a2F05" // contract address of the Edition Drop
  chain={liskchain}
  client={client}
  claimParams={{
    type: "ERC1155",
    quantity: 1n,
    tokenId: 0n,
  }}
>
  Claim now
</ClaimButton>;




             


        <div className="mt-16 flex justify-center">
          <fieldset aria-label="Payment frequency">
            <RadioGroup
              value={frequency}
              onChange={setFrequency}
              className="grid grid-cols-2 gap-x-1 rounded-full p-1 text-center text-xs/5 font-semibold ring-1 ring-gray-200 ring-inset"
            >
              {frequencies.map((option) => (
                <Radio
                  key={option.value}
                  value={option}
                  className="cursor-pointer rounded-full px-2.5 py-1 text-gray-500 data-checked:bg-gray-900 data-checked:text-white"
                >
                  {option.label}
                </Radio>
              ))}
            </RadioGroup>
          </fieldset>
        </div>
        <div className="isolate mx-auto mt-10 grid max-w-md grid-cols-1 gap-8 md:max-w-2xl md:grid-cols-2 lg:max-w-4xl xl:mx-0 xl:max-w-none xl:grid-cols-4">
          {tiers.map((tier) => (
            <div
              key={tier.id}
              className={classNames(
                tier.mostPopular ? 'ring-2 ring-gray-900' : 'ring-1 ring-gray-200',
                'rounded-3xl p-8',
              )}
            >
              <h3
                id={tier.id}
                className={classNames(
                  tier.mostPopular ? 'text-gray-900' : 'text-gray-900',
                  'text-lg/8 font-semibold',
                )}
              >
                {tier.name}
              </h3>
              <p className="mt-4 text-sm/6 text-gray-600">{tier.description}</p>
              <p className="text-center mt-6 flex items-baseline gap-x-1">
                <span className=" text-4xl font-semibold tracking-tight text-gray-900">
                  {tier.price[frequency.value]}
                </span>
                <span className="text-sm/6 font-semibold text-gray-600">{frequency.priceSuffix}</span>
              </p>
              <a
                href={tier.href}
                aria-describedby={tier.id}
                className={classNames(
                  tier.mostPopular
                    ? 'bg-gray-900 text-white shadow-xs hover:bg-gray-900'
                    : 'text-gray-900 ring-1 ring-gray-200 ring-inset hover:ring-gray-900',
                  'mt-6 block rounded-md px-3 py-2 text-center text-sm/6 font-semibold focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900',
                )}
              >
                Claim
              </a>
              <ul role="list" className="mt-8 space-y-3 text-sm/6 text-gray-600">
                {tier.features.map((feature) => (
                  <li key={feature} className="flex gap-x-3">
                    <CheckIcon aria-hidden="true" className="h-6 w-5 flex-none text-gray-900" />
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      </div>
    </div>
    </ApplicationShell>
    
  )
}
